{"version":3,"sources":["UIPlugin.js"],"names":["render","require","findDOMElement","BasePlugin","debounce","fn","calling","latestArgs","args","Promise","resolve","then","UIPlugin","mount","target","plugin","callerPluginName","id","targetElement","isTargetDOMEl","uppyRootElement","document","createDocumentFragment","state","uppy","getPlugin","afterUpdate","log","opts","replaceTargetContent","innerHTML","getState","el","firstElementChild","appendChild","onMount","targetPlugin","Target","iteratePlugins","p","parent","addTarget","message","Error","update","unmount","remove","onUnmount","module","exports"],"mappings":"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","sourcesContent":["const { render } = require('preact')\r\nconst findDOMElement = require('@uppy/utils/lib/findDOMElement')\r\n\r\nconst BasePlugin = require('./BasePlugin')\r\n\r\n/**\r\n * Defer a frequent call to the microtask queue.\r\n *\r\n * @param {() => T} fn\r\n * @returns {Promise<T>}\r\n */\r\nfunction debounce (fn) {\r\n  let calling = null\r\n  let latestArgs = null\r\n  return (...args) => {\r\n    latestArgs = args\r\n    if (!calling) {\r\n      calling = Promise.resolve().then(() => {\r\n        calling = null\r\n        // At this point `args` may be different from the most\r\n        // recent state, if multiple calls happened since this task\r\n        // was queued. So we use the `latestArgs`, which definitely\r\n        // is the most recent call.\r\n        return fn(...latestArgs)\r\n      })\r\n    }\r\n    return calling\r\n  }\r\n}\r\n\r\n/**\r\n * UIPlugin is the extended version of BasePlugin to incorporate rendering with Preact.\r\n * Use this for plugins that need a user interface.\r\n *\r\n * For plugins without an user interface, see BasePlugin.\r\n */\r\nclass UIPlugin extends BasePlugin {\r\n  #updateUI\r\n\r\n  /**\r\n   * Check if supplied `target` is a DOM element or an `object`.\r\n   * If it’s an object — target is a plugin, and we search `plugins`\r\n   * for a plugin with same name and return its target.\r\n   */\r\n  mount (target, plugin) {\r\n    const callerPluginName = plugin.id\r\n\r\n    const targetElement = findDOMElement(target)\r\n\r\n    if (targetElement) {\r\n      this.isTargetDOMEl = true\r\n      // When target is <body> with a single <div> element,\r\n      // Preact thinks it’s the Uppy root element in there when doing a diff,\r\n      // and destroys it. So we are creating a fragment (could be empty div)\r\n      const uppyRootElement = document.createDocumentFragment()\r\n\r\n      // API for plugins that require a synchronous rerender.\r\n      this.#updateUI = debounce((state) => {\r\n        // plugin could be removed, but this.rerender is debounced below,\r\n        // so it could still be called even after uppy.removePlugin or uppy.close\r\n        // hence the check\r\n        if (!this.uppy.getPlugin(this.id)) return\r\n        render(this.render(state), uppyRootElement)\r\n        this.afterUpdate()\r\n      })\r\n\r\n      this.uppy.log(`Installing ${callerPluginName} to a DOM element '${target}'`)\r\n\r\n      if (this.opts.replaceTargetContent) {\r\n        // Doing render(h(null), targetElement), which should have been\r\n        // a better way, since because the component might need to do additional cleanup when it is removed,\r\n        // stopped working — Preact just adds null into target, not replacing\r\n        targetElement.innerHTML = ''\r\n      }\r\n\r\n      render(this.render(this.uppy.getState()), uppyRootElement)\r\n      this.el = uppyRootElement.firstElementChild\r\n      targetElement.appendChild(uppyRootElement)\r\n\r\n      this.onMount()\r\n\r\n      return this.el\r\n    }\r\n\r\n    let targetPlugin\r\n    if (typeof target === 'object' && target instanceof UIPlugin) {\r\n      // Targeting a plugin *instance*\r\n      targetPlugin = target\r\n    } else if (typeof target === 'function') {\r\n      // Targeting a plugin type\r\n      const Target = target\r\n      // Find the target plugin instance.\r\n      this.uppy.iteratePlugins(p => {\r\n        if (p instanceof Target) {\r\n          targetPlugin = p\r\n          return false\r\n        }\r\n      })\r\n    }\r\n\r\n    if (targetPlugin) {\r\n      this.uppy.log(`Installing ${callerPluginName} to ${targetPlugin.id}`)\r\n      this.parent = targetPlugin\r\n      this.el = targetPlugin.addTarget(plugin)\r\n\r\n      this.onMount()\r\n      return this.el\r\n    }\r\n\r\n    this.uppy.log(`Not installing ${callerPluginName}`)\r\n\r\n    let message = `Invalid target option given to ${callerPluginName}.`\r\n    if (typeof target === 'function') {\r\n      message += ' The given target is not a Plugin class. '\r\n        + 'Please check that you\\'re not specifying a React Component instead of a plugin. '\r\n        + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: '\r\n        + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.'\r\n    } else {\r\n      message += 'If you meant to target an HTML element, please make sure that the element exists. '\r\n        + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. '\r\n        + '(see https://github.com/transloadit/uppy/issues/1042)\\n\\n'\r\n        + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.'\r\n    }\r\n    throw new Error(message)\r\n  }\r\n\r\n  update (state) {\r\n    if (this.el != null) {\r\n      this.#updateUI?.(state)\r\n    }\r\n  }\r\n\r\n  unmount () {\r\n    if (this.isTargetDOMEl) {\r\n      this.el?.remove()\r\n    }\r\n    this.onUnmount()\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  onMount () {}\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  onUnmount () {}\r\n}\r\n\r\nmodule.exports = UIPlugin\r\n"]}