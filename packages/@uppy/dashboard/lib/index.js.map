{"version":3,"sources":["index.js"],"names":["h","require","UIPlugin","StatusBar","Informer","ThumbnailGenerator","findAllDOMElements","toArray","getDroppedFiles","getTextDirection","nanoid","trapFocus","createSuperFocus","memoize","default","FOCUSABLE_ELEMENTS","DashboardUI","locale","TAB_KEY","ESC_KEY","createPromise","o","promise","Promise","resolve","reject","defaultPickerIcon","module","exports","Dashboard","constructor","uppy","opts","removeTarget","plugin","pluginState","getPluginState","newTargets","targets","filter","target","id","setPluginState","addTarget","callerPluginId","name","callerPluginName","title","callerPluginType","type","msg","log","state","slice","push","el","hideAllPanels","update","activePickerPanel","showAddFilesPanel","activeOverlayType","fileCardFor","showFileEditor","showPanel","canEditFile","file","editors","some","getPlugin","openFileEditor","forEach","editor","selectFile","saveFileEditor","save","openModal","savedScrollPosition","window","pageYOffset","savedActiveElement","document","activeElement","disablePageScrollWhenModalOpen","body","classList","add","animateOpenClose","isClosing","handler","isHidden","removeEventListener","addEventListener","browserBackButtonClose","updateBrowserHistory","handleKeyDownInModal","emit","closeModal","manualClose","remove","superFocus","cancel","focus","history","modalName","back","isModalOpen","requestCloseModal","onRequestCloseModal","setDarkModeCapability","isDarkModeOn","capabilities","getState","setState","darkMode","handleSystemDarkModeChange","event","isDarkModeOnNow","matches","toggleFileCard","show","fileID","getFile","toggleAddFilesPanel","addFiles","files","descriptors","map","source","data","meta","relativePath","err","startListeningToResize","resizeObserver","ResizeObserver","entries","uppyDashboardInnerEl","width","height","contentRect","containerWidth","containerHeight","areInsidesReadyToBeVisible","observe","querySelector","makeDashboardInsidesVisibleAnywayTimeout","setTimeout","isModalAndClosed","inline","stopListeningToResize","disconnect","clearTimeout","recordIfFocusedOnUppyRecently","contains","ifFocusedOnUppyRecently","disableAllFocusableElements","disable","focusableNodes","querySelectorAll","node","currentTabIndex","getAttribute","dataset","inertTabindex","setAttribute","removeAttribute","dashboardIsDisabled","pushState","handlePopState","keyCode","forModal","handleClickOutside","closeModalOnClickOutside","handlePaste","iteratePlugins","handleRootPaste","clipboardData","length","handleInputChange","preventDefault","handleDragOver","stopPropagation","canSomePluginHandleRootDrop","somePluginCanHandleRootDrop","canHandleRootDrop","doesEventHaveFiles","types","dataTransfer","hasFiles","disabled","disableLocalFiles","allowNewUpload","dropEffect","removeDragOverClassTimeout","isDraggingOver","onDragOver","handleDragLeave","onDragLeave","handleDrop","handleRootDrop","executedDropErrorOnce","logDropError","error","info","message","onDrop","handleRequestThumbnail","waitForThumbnailsBeforeUpload","handleCancelThumbnail","handleKeyDownInInline","forInline","handlePasteOnBody","isFocusInOverlay","handleComplete","failed","closeAfterFinish","handleCancelRestore","firstFile","initEvents","trigger","showModalTrigger","on","autoOpenFileEditor","removeEvents","off","superFocusOnEachUpdate","isFocusInUppy","isFocusNowhere","isInformerHidden","isModal","afterUpdate","saveFileCard","setFileMeta","icon","render","isSupported","newFiles","uploadStartedFiles","completeFiles","erroredFiles","inProgressFiles","inProgressNotPausedFiles","processingFiles","isUploadStarted","isAllComplete","isAllErrored","isAllPaused","getObjectOfFilesPerState","acquirers","progressindicators","theme","indexOf","fileManagerSelectionType","console","warn","totalFileCount","Object","keys","totalProgress","direction","autoProceed","i18n","i18nArray","note","recoveredState","metaFields","resumableUploads","individualCancellation","isMobileDevice","showLinkToFileUploadResult","proudlyDisplayPoweredByUppy","hideCancelButton","hideRetryButton","hidePauseResumeButton","showRemoveButtonAfterComplete","isTargetDOMEl","parentElement","allowedFileTypes","restrictions","maxNumberOfFiles","requiredMetaFields","showSelectedFiles","discoverProviderPlugins","install","Error","allowMultipleUploads","allowMultipleUploadBatches","mount","plugins","pluginID","disableStatusBar","use","hideUploadButton","showProgressDetails","hideAfterFinish","hideProgressAfterFinish","doneButtonHandler","disableInformer","disableThumbnailGenerator","thumbnailWidth","thumbnailHeight","thumbnailType","lazy","darkModeMediaQuery","matchMedia","isDarkModeOnFromTheStart","addListener","uninstall","informer","removePlugin","statusBar","thumbnail","unmount","removeListener","defaultLocale","defaultOptions","reset","i18nInit","onMount","element","dir","VERSION"],"mappings":"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","sourcesContent":["const { h } = require('preact')\r\nconst { UIPlugin } = require('@uppy/core')\r\nconst StatusBar = require('@uppy/status-bar')\r\nconst Informer = require('@uppy/informer')\r\nconst ThumbnailGenerator = require('@uppy/thumbnail-generator')\r\nconst findAllDOMElements = require('@uppy/utils/lib/findAllDOMElements')\r\nconst toArray = require('@uppy/utils/lib/toArray')\r\nconst getDroppedFiles = require('@uppy/utils/lib/getDroppedFiles')\r\nconst getTextDirection = require('@uppy/utils/lib/getTextDirection')\r\nconst { nanoid } = require('nanoid/non-secure')\r\nconst trapFocus = require('./utils/trapFocus')\r\nconst createSuperFocus = require('./utils/createSuperFocus')\r\nconst memoize = require('memoize-one').default || require('memoize-one')\r\nconst FOCUSABLE_ELEMENTS = require('@uppy/utils/lib/FOCUSABLE_ELEMENTS')\r\nconst DashboardUI = require('./components/Dashboard')\r\n\r\nconst locale = require('./locale')\r\n\r\nconst TAB_KEY = 9\r\nconst ESC_KEY = 27\r\n\r\nfunction createPromise () {\r\n  const o = {}\r\n  o.promise = new Promise((resolve, reject) => {\r\n    o.resolve = resolve\r\n    o.reject = reject\r\n  })\r\n  return o\r\n}\r\n\r\nfunction defaultPickerIcon () {\r\n  return (\r\n    <svg aria-hidden=\"true\" focusable=\"false\" width=\"30\" height=\"30\" viewBox=\"0 0 30 30\">\r\n      <path d=\"M15 30c8.284 0 15-6.716 15-15 0-8.284-6.716-15-15-15C6.716 0 0 6.716 0 15c0 8.284 6.716 15 15 15zm4.258-12.676v6.846h-8.426v-6.846H5.204l9.82-12.364 9.82 12.364H19.26z\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\n/**\r\n * Dashboard UI with previews, metadata editing, tabs for various services and more\r\n */\r\nmodule.exports = class Dashboard extends UIPlugin {\r\n  static VERSION = require('../package.json').version\r\n\r\n  constructor (uppy, opts) {\r\n    super(uppy, opts)\r\n    this.id = this.opts.id || 'Dashboard'\r\n    this.title = 'Dashboard'\r\n    this.type = 'orchestrator'\r\n    this.modalName = `uppy-Dashboard-${nanoid()}`\r\n\r\n    this.defaultLocale = locale\r\n\r\n    // set default options\r\n    const defaultOptions = {\r\n      target: 'body',\r\n      metaFields: [],\r\n      trigger: null,\r\n      inline: false,\r\n      width: 750,\r\n      height: 550,\r\n      thumbnailWidth: 280,\r\n      thumbnailType: 'image/jpeg',\r\n      waitForThumbnailsBeforeUpload: false,\r\n      defaultPickerIcon,\r\n      showLinkToFileUploadResult: false,\r\n      showProgressDetails: false,\r\n      hideUploadButton: false,\r\n      hideCancelButton: false,\r\n      hideRetryButton: false,\r\n      hidePauseResumeButton: false,\r\n      hideProgressAfterFinish: false,\r\n      doneButtonHandler: () => {\r\n        this.uppy.reset()\r\n        this.requestCloseModal()\r\n      },\r\n      note: null,\r\n      closeModalOnClickOutside: false,\r\n      closeAfterFinish: false,\r\n      disableStatusBar: false,\r\n      disableInformer: false,\r\n      disableThumbnailGenerator: false,\r\n      disablePageScrollWhenModalOpen: true,\r\n      animateOpenClose: true,\r\n      fileManagerSelectionType: 'files',\r\n      proudlyDisplayPoweredByUppy: true,\r\n      onRequestCloseModal: () => this.closeModal(),\r\n      showSelectedFiles: true,\r\n      showRemoveButtonAfterComplete: false,\r\n      browserBackButtonClose: false,\r\n      theme: 'light',\r\n      autoOpenFileEditor: false,\r\n      disabled: false,\r\n      disableLocalFiles: false,\r\n    }\r\n\r\n    // merge default options with the ones set by user\r\n    this.opts = { ...defaultOptions, ...opts }\r\n\r\n    this.i18nInit()\r\n\r\n    this.superFocus = createSuperFocus()\r\n    this.ifFocusedOnUppyRecently = false\r\n\r\n    // Timeouts\r\n    this.makeDashboardInsidesVisibleAnywayTimeout = null\r\n    this.removeDragOverClassTimeout = null\r\n  }\r\n\r\n  removeTarget = (plugin) => {\r\n    const pluginState = this.getPluginState()\r\n    // filter out the one we want to remove\r\n    const newTargets = pluginState.targets.filter(target => target.id !== plugin.id)\r\n\r\n    this.setPluginState({\r\n      targets: newTargets,\r\n    })\r\n  }\r\n\r\n  addTarget = (plugin) => {\r\n    const callerPluginId = plugin.id || plugin.constructor.name\r\n    const callerPluginName = plugin.title || callerPluginId\r\n    const callerPluginType = plugin.type\r\n\r\n    if (callerPluginType !== 'acquirer'\r\n        && callerPluginType !== 'progressindicator'\r\n        && callerPluginType !== 'editor') {\r\n      const msg = 'Dashboard: can only be targeted by plugins of types: acquirer, progressindicator, editor'\r\n      this.uppy.log(msg, 'error')\r\n      return\r\n    }\r\n\r\n    const target = {\r\n      id: callerPluginId,\r\n      name: callerPluginName,\r\n      type: callerPluginType,\r\n    }\r\n\r\n    const state = this.getPluginState()\r\n    const newTargets = state.targets.slice()\r\n    newTargets.push(target)\r\n\r\n    this.setPluginState({\r\n      targets: newTargets,\r\n    })\r\n\r\n    return this.el\r\n  }\r\n\r\n  hideAllPanels = () => {\r\n    const state = this.getPluginState()\r\n    const update = {\r\n      activePickerPanel: false,\r\n      showAddFilesPanel: false,\r\n      activeOverlayType: null,\r\n      fileCardFor: null,\r\n      showFileEditor: false,\r\n    }\r\n\r\n    if (state.activePickerPanel === update.activePickerPanel\r\n        && state.showAddFilesPanel === update.showAddFilesPanel\r\n        && state.showFileEditor === update.showFileEditor\r\n        && state.activeOverlayType === update.activeOverlayType) {\r\n      // avoid doing a state update if nothing changed\r\n      return\r\n    }\r\n\r\n    this.setPluginState(update)\r\n  }\r\n\r\n  showPanel = (id) => {\r\n    const { targets } = this.getPluginState()\r\n\r\n    const activePickerPanel = targets.filter((target) => {\r\n      return target.type === 'acquirer' && target.id === id\r\n    })[0]\r\n\r\n    this.setPluginState({\r\n      activePickerPanel,\r\n      activeOverlayType: 'PickerPanel',\r\n    })\r\n  }\r\n\r\n  canEditFile = (file) => {\r\n    const { targets } = this.getPluginState()\r\n    const editors = this.#getEditors(targets)\r\n\r\n    return editors.some((target) => (\r\n      this.uppy.getPlugin(target.id).canEditFile(file)\r\n    ))\r\n  }\r\n\r\n  openFileEditor = (file) => {\r\n    const { targets } = this.getPluginState()\r\n    const editors = this.#getEditors(targets)\r\n\r\n    this.setPluginState({\r\n      showFileEditor: true,\r\n      fileCardFor: file.id || null,\r\n      activeOverlayType: 'FileEditor',\r\n    })\r\n\r\n    editors.forEach((editor) => {\r\n      this.uppy.getPlugin(editor.id).selectFile(file)\r\n    })\r\n  }\r\n\r\n  saveFileEditor = () => {\r\n    const { targets } = this.getPluginState()\r\n    const editors = this.#getEditors(targets)\r\n\r\n    editors.forEach((editor) => {\r\n      this.uppy.getPlugin(editor.id).save()\r\n    })\r\n\r\n    this.hideAllPanels()\r\n  }\r\n\r\n  openModal = () => {\r\n    const { promise, resolve } = createPromise()\r\n    // save scroll position\r\n    this.savedScrollPosition = window.pageYOffset\r\n    // save active element, so we can restore focus when modal is closed\r\n    this.savedActiveElement = document.activeElement\r\n\r\n    if (this.opts.disablePageScrollWhenModalOpen) {\r\n      document.body.classList.add('uppy-Dashboard-isFixed')\r\n    }\r\n\r\n    if (this.opts.animateOpenClose && this.getPluginState().isClosing) {\r\n      const handler = () => {\r\n        this.setPluginState({\r\n          isHidden: false,\r\n        })\r\n        this.el.removeEventListener('animationend', handler, false)\r\n        resolve()\r\n      }\r\n      this.el.addEventListener('animationend', handler, false)\r\n    } else {\r\n      this.setPluginState({\r\n        isHidden: false,\r\n      })\r\n      resolve()\r\n    }\r\n\r\n    if (this.opts.browserBackButtonClose) {\r\n      this.updateBrowserHistory()\r\n    }\r\n\r\n    // handle ESC and TAB keys in modal dialog\r\n    document.addEventListener('keydown', this.handleKeyDownInModal)\r\n\r\n    this.uppy.emit('dashboard:modal-open')\r\n\r\n    return promise\r\n  }\r\n\r\n  closeModal = (opts = {}) => {\r\n    const {\r\n      // Whether the modal is being closed by the user (`true`) or by other means (e.g. browser back button)\r\n      manualClose = true,\r\n    } = opts\r\n\r\n    const { isHidden, isClosing } = this.getPluginState()\r\n    if (isHidden || isClosing) {\r\n      // short-circuit if animation is ongoing\r\n      return\r\n    }\r\n\r\n    const { promise, resolve } = createPromise()\r\n\r\n    if (this.opts.disablePageScrollWhenModalOpen) {\r\n      document.body.classList.remove('uppy-Dashboard-isFixed')\r\n    }\r\n\r\n    if (this.opts.animateOpenClose) {\r\n      this.setPluginState({\r\n        isClosing: true,\r\n      })\r\n      const handler = () => {\r\n        this.setPluginState({\r\n          isHidden: true,\r\n          isClosing: false,\r\n        })\r\n\r\n        this.superFocus.cancel()\r\n        this.savedActiveElement.focus()\r\n\r\n        this.el.removeEventListener('animationend', handler, false)\r\n        resolve()\r\n      }\r\n      this.el.addEventListener('animationend', handler, false)\r\n    } else {\r\n      this.setPluginState({\r\n        isHidden: true,\r\n      })\r\n\r\n      this.superFocus.cancel()\r\n      this.savedActiveElement.focus()\r\n\r\n      resolve()\r\n    }\r\n\r\n    // handle ESC and TAB keys in modal dialog\r\n    document.removeEventListener('keydown', this.handleKeyDownInModal)\r\n\r\n    if (manualClose) {\r\n      if (this.opts.browserBackButtonClose) {\r\n        // Make sure that the latest entry in the history state is our modal name\r\n        // eslint-disable-next-line no-restricted-globals\r\n        if (history.state?.[this.modalName]) {\r\n          // Go back in history to clear out the entry we created (ultimately closing the modal)\r\n          // eslint-disable-next-line no-restricted-globals\r\n          history.back()\r\n        }\r\n      }\r\n    }\r\n\r\n    this.uppy.emit('dashboard:modal-closed')\r\n\r\n    return promise\r\n  }\r\n\r\n  isModalOpen = () => {\r\n    return !this.getPluginState().isHidden || false\r\n  }\r\n\r\n  requestCloseModal = () => {\r\n    if (this.opts.onRequestCloseModal) {\r\n      return this.opts.onRequestCloseModal()\r\n    }\r\n    return this.closeModal()\r\n  }\r\n\r\n  setDarkModeCapability = (isDarkModeOn) => {\r\n    const { capabilities } = this.uppy.getState()\r\n    this.uppy.setState({\r\n      capabilities: {\r\n        ...capabilities,\r\n        darkMode: isDarkModeOn,\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSystemDarkModeChange = (event) => {\r\n    const isDarkModeOnNow = event.matches\r\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnNow ? 'on' : 'off'}`)\r\n    this.setDarkModeCapability(isDarkModeOnNow)\r\n  }\r\n\r\n  toggleFileCard = (show, fileID) => {\r\n    const file = this.uppy.getFile(fileID)\r\n    if (show) {\r\n      this.uppy.emit('dashboard:file-edit-start', file)\r\n    } else {\r\n      this.uppy.emit('dashboard:file-edit-complete', file)\r\n    }\r\n\r\n    this.setPluginState({\r\n      fileCardFor: show ? fileID : null,\r\n      activeOverlayType: show ? 'FileCard' : null,\r\n    })\r\n  }\r\n\r\n  toggleAddFilesPanel = (show) => {\r\n    this.setPluginState({\r\n      showAddFilesPanel: show,\r\n      activeOverlayType: show ? 'AddFiles' : null,\r\n    })\r\n  }\r\n\r\n  addFiles = (files) => {\r\n    const descriptors = files.map((file) => ({\r\n      source: this.id,\r\n      name: file.name,\r\n      type: file.type,\r\n      data: file,\r\n      meta: {\r\n        // path of the file relative to the ancestor directory the user selected.\r\n        // e.g. 'docs/Old Prague/airbnb.pdf'\r\n        relativePath: file.relativePath || null,\r\n      },\r\n    }))\r\n\r\n    try {\r\n      this.uppy.addFiles(descriptors)\r\n    } catch (err) {\r\n      this.uppy.log(err)\r\n    }\r\n  }\r\n\r\n  // ___Why make insides of Dashboard invisible until first ResizeObserver event is emitted?\r\n  //    ResizeOberserver doesn't emit the first resize event fast enough, users can see the jump from one .uppy-size-- to\r\n  //    another (e.g. in Safari)\r\n  // ___Why not apply visibility property to .uppy-Dashboard-inner?\r\n  //    Because ideally, acc to specs, ResizeObserver should see invisible elements as of width 0. So even though applying\r\n  //    invisibility to .uppy-Dashboard-inner works now, it may not work in the future.\r\n  startListeningToResize = () => {\r\n    // Watch for Dashboard container (`.uppy-Dashboard-inner`) resize\r\n    // and update containerWidth/containerHeight in plugin state accordingly.\r\n    // Emits first event on initialization.\r\n    this.resizeObserver = new ResizeObserver((entries) => {\r\n      const uppyDashboardInnerEl = entries[0]\r\n\r\n      const { width, height } = uppyDashboardInnerEl.contentRect\r\n\r\n      this.uppy.log(`[Dashboard] resized: ${width} / ${height}`, 'debug')\r\n\r\n      this.setPluginState({\r\n        containerWidth: width,\r\n        containerHeight: height,\r\n        areInsidesReadyToBeVisible: true,\r\n      })\r\n    })\r\n    this.resizeObserver.observe(this.el.querySelector('.uppy-Dashboard-inner'))\r\n\r\n    // If ResizeObserver fails to emit an event telling us what size to use - default to the mobile view\r\n    this.makeDashboardInsidesVisibleAnywayTimeout = setTimeout(() => {\r\n      const pluginState = this.getPluginState()\r\n      const isModalAndClosed = !this.opts.inline && pluginState.isHidden\r\n      if (\r\n        // if ResizeObserver hasn't yet fired,\r\n        !pluginState.areInsidesReadyToBeVisible\r\n        // and it's not due to the modal being closed\r\n        && !isModalAndClosed\r\n      ) {\r\n        this.uppy.log(\"[Dashboard] resize event didn't fire on time: defaulted to mobile layout\", 'debug')\r\n\r\n        this.setPluginState({\r\n          areInsidesReadyToBeVisible: true,\r\n        })\r\n      }\r\n    }, 1000)\r\n  }\r\n\r\n  stopListeningToResize = () => {\r\n    this.resizeObserver.disconnect()\r\n\r\n    clearTimeout(this.makeDashboardInsidesVisibleAnywayTimeout)\r\n  }\r\n\r\n  // Records whether we have been interacting with uppy right now,\r\n  // which is then used to determine whether state updates should trigger a refocusing.\r\n  recordIfFocusedOnUppyRecently = (event) => {\r\n    if (this.el.contains(event.target)) {\r\n      this.ifFocusedOnUppyRecently = true\r\n    } else {\r\n      this.ifFocusedOnUppyRecently = false\r\n      // ___Why run this.superFocus.cancel here when it already runs in superFocusOnEachUpdate?\r\n      //    Because superFocus is debounced, when we move from Uppy to some other element on the page,\r\n      //    previously run superFocus sometimes hits and moves focus back to Uppy.\r\n      this.superFocus.cancel()\r\n    }\r\n  }\r\n\r\n  disableAllFocusableElements = (disable) => {\r\n    const focusableNodes = toArray(this.el.querySelectorAll(FOCUSABLE_ELEMENTS))\r\n    if (disable) {\r\n      focusableNodes.forEach((node) => {\r\n        // save previous tabindex in a data-attribute, to restore when enabling\r\n        const currentTabIndex = node.getAttribute('tabindex')\r\n        if (currentTabIndex) {\r\n          node.dataset.inertTabindex = currentTabIndex\r\n        }\r\n        node.setAttribute('tabindex', '-1')\r\n      })\r\n    } else {\r\n      focusableNodes.forEach((node) => {\r\n        if ('inertTabindex' in node.dataset) {\r\n          node.setAttribute('tabindex', node.dataset.inertTabindex)\r\n        } else {\r\n          node.removeAttribute('tabindex')\r\n        }\r\n      })\r\n    }\r\n    this.dashboardIsDisabled = disable\r\n  }\r\n\r\n  updateBrowserHistory = () => {\r\n    // Ensure history state does not already contain our modal name to avoid double-pushing\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (!history.state?.[this.modalName]) {\r\n      // Push to history so that the page is not lost on browser back button press\r\n      // eslint-disable-next-line no-restricted-globals\r\n      history.pushState({\r\n        // eslint-disable-next-line no-restricted-globals\r\n        ...history.state,\r\n        [this.modalName]: true,\r\n      }, '')\r\n    }\r\n\r\n    // Listen for back button presses\r\n    window.addEventListener('popstate', this.handlePopState, false)\r\n  }\r\n\r\n  handlePopState = (event) => {\r\n    // Close the modal if the history state no longer contains our modal name\r\n    if (this.isModalOpen() && (!event.state || !event.state[this.modalName])) {\r\n      this.closeModal({ manualClose: false })\r\n    }\r\n\r\n    // When the browser back button is pressed and uppy is now the latest entry\r\n    // in the history but the modal is closed, fix the history by removing the\r\n    // uppy history entry.\r\n    // This occurs when another entry is added into the history state while the\r\n    // modal is open, and then the modal gets manually closed.\r\n    // Solves PR #575 (https://github.com/transloadit/uppy/pull/575)\r\n    if (!this.isModalOpen() && event.state?.[this.modalName]) {\r\n      // eslint-disable-next-line no-restricted-globals\r\n      history.back()\r\n    }\r\n  }\r\n\r\n  handleKeyDownInModal = (event) => {\r\n    // close modal on esc key press\r\n    if (event.keyCode === ESC_KEY) this.requestCloseModal(event)\r\n    // trap focus on tab key press\r\n    if (event.keyCode === TAB_KEY) trapFocus.forModal(event, this.getPluginState().activeOverlayType, this.el)\r\n  }\r\n\r\n  handleClickOutside = () => {\r\n    if (this.opts.closeModalOnClickOutside) this.requestCloseModal()\r\n  }\r\n\r\n  handlePaste = (event) => {\r\n    // Let any acquirer plugin (Url/Webcam/etc.) handle pastes to the root\r\n    this.uppy.iteratePlugins((plugin) => {\r\n      if (plugin.type === 'acquirer') {\r\n        // Every Plugin with .type acquirer can define handleRootPaste(event)\r\n        plugin.handleRootPaste?.(event)\r\n      }\r\n    })\r\n\r\n    // Add all dropped files\r\n    const files = toArray(event.clipboardData.files)\r\n    if (files.length > 0) {\r\n      this.uppy.log('[Dashboard] Files pasted')\r\n      this.addFiles(files)\r\n    }\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    event.preventDefault()\r\n    const files = toArray(event.target.files)\r\n    if (files.length > 0) {\r\n      this.uppy.log('[Dashboard] Files selected through input')\r\n      this.addFiles(files)\r\n    }\r\n  }\r\n\r\n  handleDragOver = (event) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    // Check if some plugin can handle the datatransfer without files —\r\n    // for instance, the Url plugin can import a url\r\n    const canSomePluginHandleRootDrop = () => {\r\n      let somePluginCanHandleRootDrop = true\r\n      this.uppy.iteratePlugins((plugin) => {\r\n        if (plugin.canHandleRootDrop?.(event)) {\r\n          somePluginCanHandleRootDrop = true\r\n        }\r\n      })\r\n      return somePluginCanHandleRootDrop\r\n    }\r\n\r\n    // Check if the \"type\" of the datatransfer object includes files\r\n    const doesEventHaveFiles = () => {\r\n      const { types } = event.dataTransfer\r\n      return types.some(type => type === 'Files')\r\n    }\r\n\r\n    // Deny drop, if no plugins can handle datatransfer, there are no files,\r\n    // or when opts.disabled is set, or new uploads are not allowed\r\n    const somePluginCanHandleRootDrop = canSomePluginHandleRootDrop(event)\r\n    const hasFiles = doesEventHaveFiles(event)\r\n    if (\r\n      (!somePluginCanHandleRootDrop && !hasFiles)\r\n      || this.opts.disabled\r\n      // opts.disableLocalFiles should only be taken into account if no plugins\r\n      // can handle the datatransfer\r\n      || (this.opts.disableLocalFiles && (hasFiles || !somePluginCanHandleRootDrop))\r\n      || !this.uppy.getState().allowNewUpload\r\n    ) {\r\n      event.dataTransfer.dropEffect = 'none'\r\n      clearTimeout(this.removeDragOverClassTimeout)\r\n      return\r\n    }\r\n\r\n    // Add a small (+) icon on drop\r\n    // (and prevent browsers from interpreting this as files being _moved_ into the\r\n    // browser, https://github.com/transloadit/uppy/issues/1978).\r\n    event.dataTransfer.dropEffect = 'copy'\r\n\r\n    clearTimeout(this.removeDragOverClassTimeout)\r\n    this.setPluginState({ isDraggingOver: true })\r\n\r\n    this.opts.onDragOver?.(event)\r\n  }\r\n\r\n  handleDragLeave = (event) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    clearTimeout(this.removeDragOverClassTimeout)\r\n    // Timeout against flickering, this solution is taken from drag-drop library.\r\n    // Solution with 'pointer-events: none' didn't work across browsers.\r\n    this.removeDragOverClassTimeout = setTimeout(() => {\r\n      this.setPluginState({ isDraggingOver: false })\r\n    }, 50)\r\n\r\n    this.opts.onDragLeave?.(event)\r\n  }\r\n\r\n  handleDrop = async (event) => {\r\n    event.preventDefault()\r\n    event.stopPropagation()\r\n\r\n    clearTimeout(this.removeDragOverClassTimeout)\r\n\r\n    this.setPluginState({ isDraggingOver: false })\r\n\r\n    // Let any acquirer plugin (Url/Webcam/etc.) handle drops to the root\r\n    this.uppy.iteratePlugins((plugin) => {\r\n      if (plugin.type === 'acquirer') {\r\n        // Every Plugin with .type acquirer can define handleRootDrop(event)\r\n        plugin.handleRootDrop?.(event)\r\n      }\r\n    })\r\n\r\n    // Add all dropped files\r\n    let executedDropErrorOnce = false\r\n    const logDropError = (error) => {\r\n      this.uppy.log(error, 'error')\r\n\r\n      // In practice all drop errors are most likely the same,\r\n      // so let's just show one to avoid overwhelming the user\r\n      if (!executedDropErrorOnce) {\r\n        this.uppy.info(error.message, 'error')\r\n        executedDropErrorOnce = true\r\n      }\r\n    }\r\n\r\n    // Add all dropped files\r\n    const files = await getDroppedFiles(event.dataTransfer, { logDropError })\r\n    if (files.length > 0) {\r\n      this.uppy.log('[Dashboard] Files dropped')\r\n      this.addFiles(files)\r\n    }\r\n\r\n    this.opts.onDrop?.(event)\r\n  }\r\n\r\n  handleRequestThumbnail = (file) => {\r\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\r\n      this.uppy.emit('thumbnail:request', file)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We cancel thumbnail requests when a file item component unmounts to avoid\r\n   * clogging up the queue when the user scrolls past many elements.\r\n   */\r\n  handleCancelThumbnail = (file) => {\r\n    if (!this.opts.waitForThumbnailsBeforeUpload) {\r\n      this.uppy.emit('thumbnail:cancel', file)\r\n    }\r\n  }\r\n\r\n  handleKeyDownInInline = (event) => {\r\n    // Trap focus on tab key press.\r\n    if (event.keyCode === TAB_KEY) trapFocus.forInline(event, this.getPluginState().activeOverlayType, this.el)\r\n  }\r\n\r\n  // ___Why do we listen to the 'paste' event on a document instead of onPaste={props.handlePaste} prop,\r\n  //    or this.el.addEventListener('paste')?\r\n  //    Because (at least) Chrome doesn't handle paste if focus is on some button, e.g. 'My Device'.\r\n  //    => Therefore, the best option is to listen to all 'paste' events, and only react to them when we are focused on our\r\n  //       particular Uppy instance.\r\n  // ___Why do we still need onPaste={props.handlePaste} for the DashboardUi?\r\n  //    Because if we click on the 'Drop files here' caption e.g., `document.activeElement` will be 'body'. Which means our\r\n  //    standard determination of whether we're pasting into our Uppy instance won't work.\r\n  //    => Therefore, we need a traditional onPaste={props.handlePaste} handler too.\r\n  handlePasteOnBody = (event) => {\r\n    const isFocusInOverlay = this.el.contains(document.activeElement)\r\n    if (isFocusInOverlay) {\r\n      this.handlePaste(event)\r\n    }\r\n  }\r\n\r\n  handleComplete = ({ failed }) => {\r\n    if (this.opts.closeAfterFinish && failed.length === 0) {\r\n      // All uploads are done\r\n      this.requestCloseModal()\r\n    }\r\n  }\r\n\r\n  handleCancelRestore = () => {\r\n    this.uppy.emit('restore-canceled')\r\n  }\r\n\r\n  #openFileEditorWhenFilesAdded = (files) => {\r\n    const firstFile = files[0]\r\n    if (this.canEditFile(firstFile)) {\r\n      this.openFileEditor(firstFile)\r\n    }\r\n  }\r\n\r\n  initEvents = () => {\r\n    // Modal open button\r\n    if (this.opts.trigger && !this.opts.inline) {\r\n      const showModalTrigger = findAllDOMElements(this.opts.trigger)\r\n      if (showModalTrigger) {\r\n        showModalTrigger.forEach(trigger => trigger.addEventListener('click', this.openModal))\r\n      } else {\r\n        this.uppy.log('Dashboard modal trigger not found. Make sure `trigger` is set in Dashboard options, unless you are planning to call `dashboard.openModal()` method yourself', 'warning')\r\n      }\r\n    }\r\n\r\n    this.startListeningToResize()\r\n    document.addEventListener('paste', this.handlePasteOnBody)\r\n\r\n    this.uppy.on('plugin-remove', this.removeTarget)\r\n    this.uppy.on('file-added', this.hideAllPanels)\r\n    this.uppy.on('dashboard:modal-closed', this.hideAllPanels)\r\n    this.uppy.on('file-editor:complete', this.hideAllPanels)\r\n    this.uppy.on('complete', this.handleComplete)\r\n\r\n    // ___Why fire on capture?\r\n    //    Because this.ifFocusedOnUppyRecently needs to change before onUpdate() fires.\r\n    document.addEventListener('focus', this.recordIfFocusedOnUppyRecently, true)\r\n    document.addEventListener('click', this.recordIfFocusedOnUppyRecently, true)\r\n\r\n    if (this.opts.inline) {\r\n      this.el.addEventListener('keydown', this.handleKeyDownInInline)\r\n    }\r\n\r\n    if (this.opts.autoOpenFileEditor) {\r\n      this.uppy.on('files-added', this.#openFileEditorWhenFilesAdded)\r\n    }\r\n  }\r\n\r\n  removeEvents = () => {\r\n    const showModalTrigger = findAllDOMElements(this.opts.trigger)\r\n    if (!this.opts.inline && showModalTrigger) {\r\n      showModalTrigger.forEach(trigger => trigger.removeEventListener('click', this.openModal))\r\n    }\r\n\r\n    this.stopListeningToResize()\r\n    document.removeEventListener('paste', this.handlePasteOnBody)\r\n\r\n    window.removeEventListener('popstate', this.handlePopState, false)\r\n    this.uppy.off('plugin-remove', this.removeTarget)\r\n    this.uppy.off('file-added', this.hideAllPanels)\r\n    this.uppy.off('dashboard:modal-closed', this.hideAllPanels)\r\n    this.uppy.off('file-editor:complete', this.hideAllPanels)\r\n    this.uppy.off('complete', this.handleComplete)\r\n\r\n    document.removeEventListener('focus', this.recordIfFocusedOnUppyRecently)\r\n    document.removeEventListener('click', this.recordIfFocusedOnUppyRecently)\r\n\r\n    if (this.opts.inline) {\r\n      this.el.removeEventListener('keydown', this.handleKeyDownInInline)\r\n    }\r\n\r\n    if (this.opts.autoOpenFileEditor) {\r\n      this.uppy.off('files-added', this.#openFileEditorWhenFilesAdded)\r\n    }\r\n  }\r\n\r\n  superFocusOnEachUpdate = () => {\r\n    const isFocusInUppy = this.el.contains(document.activeElement)\r\n    // When focus is lost on the page (== focus is on body for most browsers, or focus is null for IE11)\r\n    const isFocusNowhere = document.activeElement === document.body || document.activeElement === null\r\n    const isInformerHidden = this.uppy.getState().info.length === 0\r\n    const isModal = !this.opts.inline\r\n\r\n    if (\r\n      // If update is connected to showing the Informer - let the screen reader calmly read it.\r\n      isInformerHidden\r\n      && (\r\n        // If we are in a modal - always superfocus without concern for other elements\r\n        // on the page (user is unlikely to want to interact with the rest of the page)\r\n        isModal\r\n        // If we are already inside of Uppy, or\r\n        || isFocusInUppy\r\n        // If we are not focused on anything BUT we have already, at least once, focused on uppy\r\n        //   1. We focus when isFocusNowhere, because when the element we were focused\r\n        //      on disappears (e.g. an overlay), - focus gets lost. If user is typing\r\n        //      something somewhere else on the page, - focus won't be 'nowhere'.\r\n        //   2. We only focus when focus is nowhere AND this.ifFocusedOnUppyRecently,\r\n        //      to avoid focus jumps if we do something else on the page.\r\n        //   [Practical check] Without '&& this.ifFocusedOnUppyRecently', in Safari, in inline mode,\r\n        //                     when file is uploading, - navigate via tab to the checkbox,\r\n        //                     try to press space multiple times. Focus will jump to Uppy.\r\n        || (isFocusNowhere && this.ifFocusedOnUppyRecently)\r\n      )\r\n    ) {\r\n      this.superFocus(this.el, this.getPluginState().activeOverlayType)\r\n    } else {\r\n      this.superFocus.cancel()\r\n    }\r\n  }\r\n\r\n  afterUpdate = () => {\r\n    if (this.opts.disabled && !this.dashboardIsDisabled) {\r\n      this.disableAllFocusableElements(true)\r\n      return\r\n    }\r\n\r\n    if (!this.opts.disabled && this.dashboardIsDisabled) {\r\n      this.disableAllFocusableElements(false)\r\n    }\r\n\r\n    this.superFocusOnEachUpdate()\r\n  }\r\n\r\n  saveFileCard = (meta, fileID) => {\r\n    this.uppy.setFileMeta(fileID, meta)\r\n    this.toggleFileCard(false, fileID)\r\n  }\r\n\r\n  #attachRenderFunctionToTarget = (target) => {\r\n    const plugin = this.uppy.getPlugin(target.id)\r\n    return {\r\n      ...target,\r\n      icon: plugin.icon || this.opts.defaultPickerIcon,\r\n      render: plugin.render,\r\n    }\r\n  }\r\n\r\n  #isTargetSupported = (target) => {\r\n    const plugin = this.uppy.getPlugin(target.id)\r\n    // If the plugin does not provide a `supported` check, assume the plugin works everywhere.\r\n    if (typeof plugin.isSupported !== 'function') {\r\n      return true\r\n    }\r\n    return plugin.isSupported()\r\n  }\r\n\r\n  #getAcquirers = memoize((targets) => {\r\n    return targets\r\n      .filter(target => target.type === 'acquirer' && this.#isTargetSupported(target))\r\n      .map(this.#attachRenderFunctionToTarget)\r\n  })\r\n\r\n  #getProgressIndicators = memoize((targets) => {\r\n    return targets\r\n      .filter(target => target.type === 'progressindicator')\r\n      .map(this.#attachRenderFunctionToTarget)\r\n  })\r\n\r\n  #getEditors = memoize((targets) => {\r\n    return targets\r\n      .filter(target => target.type === 'editor')\r\n      .map(this.#attachRenderFunctionToTarget)\r\n  })\r\n\r\n  render = (state) => {\r\n    const pluginState = this.getPluginState()\r\n    const { files, capabilities, allowNewUpload } = state\r\n    const {\r\n      newFiles,\r\n      uploadStartedFiles,\r\n      completeFiles,\r\n      erroredFiles,\r\n      inProgressFiles,\r\n      inProgressNotPausedFiles,\r\n      processingFiles,\r\n\r\n      isUploadStarted,\r\n      isAllComplete,\r\n      isAllErrored,\r\n      isAllPaused,\r\n    } = this.uppy.getObjectOfFilesPerState()\r\n\r\n    const acquirers = this.#getAcquirers(pluginState.targets)\r\n    const progressindicators = this.#getProgressIndicators(pluginState.targets)\r\n    const editors = this.#getEditors(pluginState.targets)\r\n\r\n    let theme\r\n    if (this.opts.theme === 'auto') {\r\n      theme = capabilities.darkMode ? 'dark' : 'light'\r\n    } else {\r\n      theme = this.opts.theme\r\n    }\r\n\r\n    if (['files', 'folders', 'both'].indexOf(this.opts.fileManagerSelectionType) < 0) {\r\n      this.opts.fileManagerSelectionType = 'files'\r\n      // eslint-disable-next-line no-console\r\n      console.warn(`Unsupported option for \"fileManagerSelectionType\". Using default of \"${this.opts.fileManagerSelectionType}\".`)\r\n    }\r\n\r\n    return DashboardUI({\r\n      state,\r\n      isHidden: pluginState.isHidden,\r\n      files,\r\n      newFiles,\r\n      uploadStartedFiles,\r\n      completeFiles,\r\n      erroredFiles,\r\n      inProgressFiles,\r\n      inProgressNotPausedFiles,\r\n      processingFiles,\r\n      isUploadStarted,\r\n      isAllComplete,\r\n      isAllErrored,\r\n      isAllPaused,\r\n      totalFileCount: Object.keys(files).length,\r\n      totalProgress: state.totalProgress,\r\n      allowNewUpload,\r\n      acquirers,\r\n      theme,\r\n      disabled: this.opts.disabled,\r\n      disableLocalFiles: this.opts.disableLocalFiles,\r\n      direction: this.opts.direction,\r\n      activePickerPanel: pluginState.activePickerPanel,\r\n      showFileEditor: pluginState.showFileEditor,\r\n      saveFileEditor: this.saveFileEditor,\r\n      disableAllFocusableElements: this.disableAllFocusableElements,\r\n      animateOpenClose: this.opts.animateOpenClose,\r\n      isClosing: pluginState.isClosing,\r\n      progressindicators,\r\n      editors,\r\n      autoProceed: this.uppy.opts.autoProceed,\r\n      id: this.id,\r\n      closeModal: this.requestCloseModal,\r\n      handleClickOutside: this.handleClickOutside,\r\n      handleInputChange: this.handleInputChange,\r\n      handlePaste: this.handlePaste,\r\n      inline: this.opts.inline,\r\n      showPanel: this.showPanel,\r\n      hideAllPanels: this.hideAllPanels,\r\n      i18n: this.i18n,\r\n      i18nArray: this.i18nArray,\r\n      uppy: this.uppy,\r\n      note: this.opts.note,\r\n      recoveredState: state.recoveredState,\r\n      metaFields: pluginState.metaFields,\r\n      resumableUploads: capabilities.resumableUploads || false,\r\n      individualCancellation: capabilities.individualCancellation,\r\n      isMobileDevice: capabilities.isMobileDevice,\r\n      fileCardFor: pluginState.fileCardFor,\r\n      toggleFileCard: this.toggleFileCard,\r\n      toggleAddFilesPanel: this.toggleAddFilesPanel,\r\n      showAddFilesPanel: pluginState.showAddFilesPanel,\r\n      saveFileCard: this.saveFileCard,\r\n      openFileEditor: this.openFileEditor,\r\n      canEditFile: this.canEditFile,\r\n      width: this.opts.width,\r\n      height: this.opts.height,\r\n      showLinkToFileUploadResult: this.opts.showLinkToFileUploadResult,\r\n      fileManagerSelectionType: this.opts.fileManagerSelectionType,\r\n      proudlyDisplayPoweredByUppy: this.opts.proudlyDisplayPoweredByUppy,\r\n      hideCancelButton: this.opts.hideCancelButton,\r\n      hideRetryButton: this.opts.hideRetryButton,\r\n      hidePauseResumeButton: this.opts.hidePauseResumeButton,\r\n      showRemoveButtonAfterComplete: this.opts.showRemoveButtonAfterComplete,\r\n      containerWidth: pluginState.containerWidth,\r\n      containerHeight: pluginState.containerHeight,\r\n      areInsidesReadyToBeVisible: pluginState.areInsidesReadyToBeVisible,\r\n      isTargetDOMEl: this.isTargetDOMEl,\r\n      parentElement: this.el,\r\n      allowedFileTypes: this.uppy.opts.restrictions.allowedFileTypes,\r\n      maxNumberOfFiles: this.uppy.opts.restrictions.maxNumberOfFiles,\r\n      requiredMetaFields: this.uppy.opts.restrictions.requiredMetaFields,\r\n      showSelectedFiles: this.opts.showSelectedFiles,\r\n      handleCancelRestore: this.handleCancelRestore,\r\n      handleRequestThumbnail: this.handleRequestThumbnail,\r\n      handleCancelThumbnail: this.handleCancelThumbnail,\r\n      // drag props\r\n      isDraggingOver: pluginState.isDraggingOver,\r\n      handleDragOver: this.handleDragOver,\r\n      handleDragLeave: this.handleDragLeave,\r\n      handleDrop: this.handleDrop,\r\n    })\r\n  }\r\n\r\n  discoverProviderPlugins = () => {\r\n    this.uppy.iteratePlugins((plugin) => {\r\n      if (plugin && !plugin.target && plugin.opts && plugin.opts.target === this.constructor) {\r\n        this.addTarget(plugin)\r\n      }\r\n    })\r\n  }\r\n\r\n  onMount () {\r\n    // Set the text direction if the page has not defined one.\r\n    const element = this.el\r\n    const direction = getTextDirection(element)\r\n    if (!direction) {\r\n      element.dir = 'ltr'\r\n    }\r\n  }\r\n\r\n  install = () => {\r\n    // Set default state for Dashboard\r\n    this.setPluginState({\r\n      isHidden: true,\r\n      fileCardFor: null,\r\n      activeOverlayType: null,\r\n      showAddFilesPanel: false,\r\n      activePickerPanel: false,\r\n      showFileEditor: false,\r\n      metaFields: this.opts.metaFields,\r\n      targets: [],\r\n      // We'll make them visible once .containerWidth is determined\r\n      areInsidesReadyToBeVisible: false,\r\n      isDraggingOver: false,\r\n    })\r\n\r\n    const { inline, closeAfterFinish } = this.opts\r\n    if (inline && closeAfterFinish) {\r\n      throw new Error('[Dashboard] `closeAfterFinish: true` cannot be used on an inline Dashboard, because an inline Dashboard cannot be closed at all. Either set `inline: false`, or disable the `closeAfterFinish` option.')\r\n    }\r\n\r\n    const { allowMultipleUploads, allowMultipleUploadBatches } = this.uppy.opts\r\n    if ((allowMultipleUploads || allowMultipleUploadBatches) && closeAfterFinish) {\r\n      this.uppy.log('[Dashboard] When using `closeAfterFinish`, we recommended setting the `allowMultipleUploadBatches` option to `false` in the Uppy constructor. See https://uppy.io/docs/uppy/#allowMultipleUploads-true', 'warning')\r\n    }\r\n\r\n    const { target } = this.opts\r\n\r\n    if (target) {\r\n      this.mount(target, this)\r\n    }\r\n\r\n    const plugins = this.opts.plugins || []\r\n\r\n    plugins.forEach((pluginID) => {\r\n      const plugin = this.uppy.getPlugin(pluginID)\r\n      if (plugin) {\r\n        plugin.mount(this, plugin)\r\n      }\r\n    })\r\n\r\n    if (!this.opts.disableStatusBar) {\r\n      this.uppy.use(StatusBar, {\r\n        id: `${this.id}:StatusBar`,\r\n        target: this,\r\n        hideUploadButton: this.opts.hideUploadButton,\r\n        hideRetryButton: this.opts.hideRetryButton,\r\n        hidePauseResumeButton: this.opts.hidePauseResumeButton,\r\n        hideCancelButton: this.opts.hideCancelButton,\r\n        showProgressDetails: this.opts.showProgressDetails,\r\n        hideAfterFinish: this.opts.hideProgressAfterFinish,\r\n        locale: this.opts.locale,\r\n        doneButtonHandler: this.opts.doneButtonHandler,\r\n      })\r\n    }\r\n\r\n    if (!this.opts.disableInformer) {\r\n      this.uppy.use(Informer, {\r\n        id: `${this.id}:Informer`,\r\n        target: this,\r\n      })\r\n    }\r\n\r\n    if (!this.opts.disableThumbnailGenerator) {\r\n      this.uppy.use(ThumbnailGenerator, {\r\n        id: `${this.id}:ThumbnailGenerator`,\r\n        thumbnailWidth: this.opts.thumbnailWidth,\r\n        thumbnailHeight: this.opts.thumbnailHeight,\r\n        thumbnailType: this.opts.thumbnailType,\r\n        waitForThumbnailsBeforeUpload: this.opts.waitForThumbnailsBeforeUpload,\r\n        // If we don't block on thumbnails, we can lazily generate them\r\n        lazy: !this.opts.waitForThumbnailsBeforeUpload,\r\n      })\r\n    }\r\n\r\n    // Dark Mode / theme\r\n    this.darkModeMediaQuery = (typeof window !== 'undefined' && window.matchMedia)\r\n      ? window.matchMedia('(prefers-color-scheme: dark)')\r\n      : null\r\n\r\n    const isDarkModeOnFromTheStart = this.darkModeMediaQuery ? this.darkModeMediaQuery.matches : false\r\n    this.uppy.log(`[Dashboard] Dark mode is ${isDarkModeOnFromTheStart ? 'on' : 'off'}`)\r\n    this.setDarkModeCapability(isDarkModeOnFromTheStart)\r\n\r\n    if (this.opts.theme === 'auto') {\r\n      this.darkModeMediaQuery.addListener(this.handleSystemDarkModeChange)\r\n    }\r\n\r\n    this.discoverProviderPlugins()\r\n    this.initEvents()\r\n  }\r\n\r\n  uninstall = () => {\r\n    if (!this.opts.disableInformer) {\r\n      const informer = this.uppy.getPlugin(`${this.id}:Informer`)\r\n      // Checking if this plugin exists, in case it was removed by uppy-core\r\n      // before the Dashboard was.\r\n      if (informer) this.uppy.removePlugin(informer)\r\n    }\r\n\r\n    if (!this.opts.disableStatusBar) {\r\n      const statusBar = this.uppy.getPlugin(`${this.id}:StatusBar`)\r\n      if (statusBar) this.uppy.removePlugin(statusBar)\r\n    }\r\n\r\n    if (!this.opts.disableThumbnailGenerator) {\r\n      const thumbnail = this.uppy.getPlugin(`${this.id}:ThumbnailGenerator`)\r\n      if (thumbnail) this.uppy.removePlugin(thumbnail)\r\n    }\r\n\r\n    const plugins = this.opts.plugins || []\r\n    plugins.forEach((pluginID) => {\r\n      const plugin = this.uppy.getPlugin(pluginID)\r\n      if (plugin) plugin.unmount()\r\n    })\r\n\r\n    if (this.opts.theme === 'auto') {\r\n      this.darkModeMediaQuery.removeListener(this.handleSystemDarkModeChange)\r\n    }\r\n\r\n    this.unmount()\r\n    this.removeEvents()\r\n  }\r\n}\r\n"]}