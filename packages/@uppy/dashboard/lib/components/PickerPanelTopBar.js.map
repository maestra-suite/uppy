{"version":3,"sources":["PickerPanelTopBar.js"],"names":["h","require","uploadStates","STATE_ERROR","STATE_WAITING","STATE_PREPROCESSING","STATE_UPLOADING","STATE_POSTPROCESSING","STATE_COMPLETE","STATE_PAUSED","getUploadingState","isAllErrored","isAllComplete","isAllPaused","files","state","fileIDs","Object","keys","i","length","progress","uploadStarted","uploadComplete","preprocess","postprocess","UploadStatus","props","uploadingState","i18n","smart_count","inProgressNotPausedFiles","processingFiles","newFiles","PanelTopBar","allowNewUpload","maxNumberOfFiles","totalFileCount","hideCancelButton","uppy","cancelAll","toggleAddFilesPanel","module","exports"],"mappings":"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","sourcesContent":["const { h } = require('preact')\r\n\r\nconst uploadStates = {\r\n  STATE_ERROR: 'error',\r\n  STATE_WAITING: 'waiting',\r\n  STATE_PREPROCESSING: 'preprocessing',\r\n  STATE_UPLOADING: 'uploading',\r\n  STATE_POSTPROCESSING: 'postprocessing',\r\n  STATE_COMPLETE: 'complete',\r\n  STATE_PAUSED: 'paused',\r\n}\r\n\r\nfunction getUploadingState(isAllErrored, isAllComplete, isAllPaused, files = {}) {\r\n  if (isAllErrored) {\r\n    return uploadStates.STATE_ERROR\r\n  }\r\n\r\n  if (isAllComplete) {\r\n    return uploadStates.STATE_COMPLETE\r\n  }\r\n\r\n  if (isAllPaused) {\r\n    return uploadStates.STATE_PAUSED\r\n  }\r\n\r\n  let state = uploadStates.STATE_WAITING\r\n  const fileIDs = Object.keys(files)\r\n  for (let i = 0; i < fileIDs.length; i++) {\r\n    const { progress } = files[fileIDs[i]]\r\n    // If ANY files are being uploaded right now, show the uploading state.\r\n    if (progress.uploadStarted && !progress.uploadComplete) {\r\n      return uploadStates.STATE_UPLOADING\r\n    }\r\n    // If files are being preprocessed AND postprocessed at this time, we show the\r\n    // preprocess state. If any files are being uploaded we show uploading.\r\n    if (progress.preprocess && state !== uploadStates.STATE_UPLOADING) {\r\n      state = uploadStates.STATE_PREPROCESSING\r\n    }\r\n    // If NO files are being preprocessed or uploaded right now, but some files are\r\n    // being postprocessed, show the postprocess state.\r\n    if (progress.postprocess && state !== uploadStates.STATE_UPLOADING && state !== uploadStates.STATE_PREPROCESSING) {\r\n      state = uploadStates.STATE_POSTPROCESSING\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nfunction UploadStatus(props) {\r\n  const uploadingState = getUploadingState(\r\n    props.isAllErrored,\r\n    props.isAllComplete,\r\n    props.isAllPaused,\r\n    props.files,\r\n  )\r\n\r\n  switch (uploadingState) {\r\n    case 'uploading':\r\n      return props.i18n('uploadingXFiles', { smart_count: props.inProgressNotPausedFiles.length })\r\n    case 'preprocessing':\r\n    case 'postprocessing':\r\n      return props.i18n('processingXFiles', { smart_count: props.processingFiles.length })\r\n    case 'paused':\r\n      return props.i18n('uploadPaused')\r\n    case 'waiting':\r\n      return props.i18n('xFilesSelected', { smart_count: props.newFiles.length })\r\n    case 'complete':\r\n      return props.i18n('uploadComplete')\r\n  }\r\n}\r\n\r\nfunction PanelTopBar (props) {\r\n  let { allowNewUpload } = props\r\n  // TODO maybe this should be done in ../index.js, then just pass that down as `allowNewUpload`\r\n  if (allowNewUpload && props.maxNumberOfFiles) {\r\n    allowNewUpload = props.totalFileCount < props.maxNumberOfFiles\r\n  }\r\n\r\n  return (\r\n    <div className=\"uppy-DashboardContent-bar\">\r\n      {!props.isAllComplete && !props.hideCancelButton ? (\r\n        <button\r\n          className=\"uppy-DashboardContent-back\"\r\n          type=\"button\"\r\n          onClick={() => props.uppy.cancelAll()}\r\n        >\r\n          {props.i18n('cancel')}\r\n        </button>\r\n      ) : (\r\n          <div />\r\n        )}\r\n\r\n      <div className=\"uppy-DashboardContent-title\" role=\"heading\" aria-level=\"1\">\r\n        <UploadStatus {...props} />\r\n      </div>\r\n      <div className=\"uppy-topBarRightContainer\">\r\n        <div className=\"uppy-SpeakerCount\">Speaker Count</div>\r\n        {allowNewUpload ? (\r\n          <button\r\n            class=\"uppy-DashboardContent-addMore\"\r\n            type=\"button\"\r\n            aria-label={props.i18n('addMoreFiles')}\r\n            title={props.i18n('addMoreFiles')}\r\n            onclick={() => props.toggleAddFilesPanel(true)}\r\n          >\r\n            <svg aria-hidden=\"true\" focusable=\"false\" class=\"uppy-c-icon\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\">\r\n              <path d=\"M8 6.5h6a.5.5 0 0 1 .5.5v.5a.5.5 0 0 1-.5.5H8v6a.5.5 0 0 1-.5.5H7a.5.5 0 0 1-.5-.5V8h-6a.5.5 0 0 1-.5-.5V7a.5.5 0 0 1 .5-.5h6v-6A.5.5 0 0 1 7 0h.5a.5.5 0 0 1 .5.5v6z\" />\r\n            </svg>\r\n            <span class=\"uppy-DashboardContent-addMoreCaption\">{props.i18n('addMore')}</span>\r\n          </button>\r\n        ) : (\r\n            <div />\r\n          )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nmodule.exports = PanelTopBar\r\n"]}