{"version":3,"sources":["index.js"],"names":["h","require","FilePreview","MetaErrorMessage","getFileTypeIcon","getYouTubeID","matchYoutubeUrl","url","p","match","module","exports","FilePreviewAndLink","props","thumbnail","file","remote","body","videoID","fuzzy","background","type","color","backgroundPosition","backgroundRepeat","backgroundSize","showLinkToFileUploadResult","uploadURL","meta","name","i18n","toggleFileCard","metaFields"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAQC,OAAO,CAAC,QAAD,CAArB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,mBAAD,CAA3B;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,qBAAD,CAAhC;;AACA,MAAMG,eAAe,GAAGH,OAAO,CAAC,gCAAD,CAA/B;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,gBAAD,CAA5B;;AAEA,SAASK,eAAT,CAAyBC,GAAzB,EAA8B;AAC5B,MAAIC,CAAC,GAAG,0HAAR;;AACA,MAAID,GAAG,CAACE,KAAJ,CAAUD,CAAV,CAAJ,EAAkB;AAChB,WAAOD,GAAG,CAACE,KAAJ,CAAUD,CAAV,EAAa,CAAb,CAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAClD,MAAIC,SAAS,GAAG,KAAhB;AACA,QAAMP,GAAG,GAAGM,KAAH,mCAAGA,KAAK,CAAEE,IAAV,2CAAG,YAAaC,MAAhB,8CAAG,mBAAqBC,IAAxB,qBAAG,sBAA2BV,GAAvC;;AACA,MAAIA,GAAG,IAAID,eAAe,CAACC,GAAD,CAA1B,EAAiC;AAC/B,UAAMW,OAAO,GAAGb,YAAY,CAACE,GAAD,EAAM;AAAEY,MAAAA,KAAK,EAAE;AAAT,KAAN,CAA5B;AACAL,IAAAA,SAAS,GAAI,8BAA6BI,OAAQ,cAAlD;AACD;;AAED,SACE;AACE,IAAA,KAAK,EAAC,sCADR;AAEE,IAAA,KAAK,EAAE;AAAEE,MAAAA,UAAU,EAAEN,SAAS,GAAI,OAAMA,SAAU,GAApB,GAAyBV,eAAe,CAACS,KAAK,CAACE,IAAN,CAAWM,IAAZ,CAAf,CAAiCC,KAAjF;AAAwFC,MAAAA,kBAAkB,EAAE,QAA5G;AAAsHC,MAAAA,gBAAgB,EAAE,WAAxI;AAAqJC,MAAAA,cAAc,EAAE;AAArK;AAFT,KAKIZ,KAAK,CAACa,0BAAN,IACGb,KAAK,CAACE,IAAN,CAAWY,SADd,IAGE;AACE,IAAA,SAAS,EAAC,iCADZ;AAEE,IAAA,IAAI,EAAEd,KAAK,CAACE,IAAN,CAAWY,SAFnB;AAGE,IAAA,GAAG,EAAC,qBAHN;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,kBAAYd,KAAK,CAACE,IAAN,CAAWa,IAAX,CAAgBC;AAL9B,KAOE;AAAM,IAAA,MAAM;AAAZ,KAAchB,KAAK,CAACE,IAAN,CAAWa,IAAX,CAAgBC,IAA9B,CAPF,CARN,EAoBI,CAACf,SAAD,IACA,EAAC,WAAD;AAAa,IAAA,IAAI,EAAED,KAAK,CAACE;AAAzB,IArBJ,EAuBE,EAAC,gBAAD;AACE,IAAA,IAAI,EAAEF,KAAK,CAACE,IADd;AAEE,IAAA,IAAI,EAAEF,KAAK,CAACiB,IAFd;AAGE,IAAA,cAAc,EAAEjB,KAAK,CAACkB,cAHxB;AAIE,IAAA,UAAU,EAAElB,KAAK,CAACmB;AAJpB,IAvBF,CADF;AAgCD,CAxCD","sourcesContent":["const { h } = require('preact')\r\nconst FilePreview = require('../../FilePreview')\r\nconst MetaErrorMessage = require('../MetaErrorMessage')\r\nconst getFileTypeIcon = require('../../../utils/getFileTypeIcon')\r\nconst getYouTubeID = require('get-youtube-id');\r\n\r\nfunction matchYoutubeUrl(url) {\r\n  var p = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n  if (url.match(p)) {\r\n    return url.match(p)[1];\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = function FilePreviewAndLink(props) {\r\n  let thumbnail = false\r\n  const url = props?.file?.remote?.body?.url\r\n  if (url && matchYoutubeUrl(url)) {\r\n    const videoID = getYouTubeID(url, { fuzzy: false });\r\n    thumbnail = `https://img.youtube.com/vi/${videoID}/default.jpg`\r\n  }\r\n\r\n  return (\r\n    <div\r\n      class=\"uppy-Dashboard-Item-previewInnerWrap\"\r\n      style={{ background: thumbnail ? `url(${thumbnail})` : getFileTypeIcon(props.file.type).color, backgroundPosition: 'center', backgroundRepeat: 'no-repeat', backgroundSize: 'cover' }}\r\n    >\r\n      {\r\n        props.showLinkToFileUploadResult\r\n        && props.file.uploadURL\r\n          && (\r\n          <a\r\n            className=\"uppy-Dashboard-Item-previewLink\"\r\n            href={props.file.uploadURL}\r\n            rel=\"noreferrer noopener\"\r\n            target=\"_blank\"\r\n            aria-label={props.file.meta.name}\r\n          >\r\n            <span hidden>{props.file.meta.name}</span>\r\n          </a>\r\n          )\r\n      }\r\n      {\r\n        !thumbnail &&\r\n        <FilePreview file={props.file} />\r\n      }\r\n      <MetaErrorMessage\r\n        file={props.file}\r\n        i18n={props.i18n}\r\n        toggleFileCard={props.toggleFileCard}\r\n        metaFields={props.metaFields}\r\n      />\r\n    </div>\r\n  )\r\n}"]}