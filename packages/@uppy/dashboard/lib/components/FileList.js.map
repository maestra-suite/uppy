{"version":3,"sources":["FileList.js"],"names":["classNames","require","h","FileItem","VirtualList","chunks","list","size","chunked","currentChunk","forEach","item","length","push","module","exports","props","noFiles","totalFileCount","dashboardFilesClass","rowHeight","itemsPerRow","fileProps","id","error","i18n","uppy","acquirers","resumableUploads","individualCancellation","hideRetryButton","hidePauseResumeButton","hideCancelButton","showLinkToFileUploadResult","showRemoveButtonAfterComplete","isWide","metaFields","recoveredState","toggleFileCard","handleRequestThumbnail","handleCancelThumbnail","setFileMeta","sortByGhostComesFirst","file1","file2","files","isGhost","Object","keys","sort","rows","renderRow","row","map","fileID","openFileEditor","canEditFile","toggleAddFilesPanel"],"mappings":"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","sourcesContent":["const classNames = require('classnames')\r\nconst { h } = require('preact')\r\nconst FileItem = require('./FileItem/index.js')\r\nconst VirtualList = require('./VirtualList')\r\n\r\nfunction chunks (list, size) {\r\n  const chunked = []\r\n  let currentChunk = []\r\n  list.forEach((item) => {\r\n    if (currentChunk.length < size) {\r\n      currentChunk.push(item)\r\n    } else {\r\n      chunked.push(currentChunk)\r\n      currentChunk = [item]\r\n    }\r\n  })\r\n  if (currentChunk.length) chunked.push(currentChunk)\r\n  return chunked\r\n}\r\n\r\nmodule.exports = (props) => {\r\n  const noFiles = props.totalFileCount === 0\r\n  const dashboardFilesClass = classNames(\r\n    'uppy-Dashboard-files',\r\n    { 'uppy-Dashboard-files--noFiles': noFiles },\r\n  )\r\n\r\n  // It's not great that this is hardcoded!\r\n  // It's ESPECIALLY not great that this is checking against `itemsPerRow`!\r\n  const rowHeight = props.itemsPerRow === 1\r\n    // Mobile\r\n    ? 71\r\n    // 190px height + 2 * 5px margin\r\n    : 200\r\n\r\n  const fileProps = {\r\n    // FIXME This is confusing, it's actually the Dashboard's plugin ID\r\n    id: props.id,\r\n    error: props.error,\r\n    // TODO move this to context\r\n    i18n: props.i18n,\r\n    uppy: props.uppy,\r\n    // features\r\n    acquirers: props.acquirers,\r\n    resumableUploads: props.resumableUploads,\r\n    individualCancellation: props.individualCancellation,\r\n    // visual options\r\n    hideRetryButton: props.hideRetryButton,\r\n    hidePauseResumeButton: props.hidePauseResumeButton,\r\n    hideCancelButton: props.hideCancelButton,\r\n    showLinkToFileUploadResult: props.showLinkToFileUploadResult,\r\n    showRemoveButtonAfterComplete: props.showRemoveButtonAfterComplete,\r\n    isWide: props.isWide,\r\n    metaFields: props.metaFields,\r\n    recoveredState: props.recoveredState,\r\n    // callbacks\r\n    toggleFileCard: props.toggleFileCard,\r\n    handleRequestThumbnail: props.handleRequestThumbnail,\r\n    handleCancelThumbnail: props.handleCancelThumbnail,\r\n    setFileMeta: props.uppy.setFileMeta,\r\n  }\r\n\r\n  const sortByGhostComesFirst = (file1, file2) => {\r\n    return props.files[file2].isGhost - props.files[file1].isGhost\r\n  }\r\n\r\n  // Sort files by file.isGhost, ghost files first, only if recoveredState is present\r\n  const files = Object.keys(props.files)\r\n  if (props.recoveredState) files.sort(sortByGhostComesFirst)\r\n  const rows = chunks(files, props.itemsPerRow)\r\n\r\n  const renderRow = (row) => (\r\n    // The `role=\"presentation` attribute ensures that the list items are properly\r\n    // associated with the `VirtualList` element.\r\n    // We use the first file ID as the keyâ€”this should not change across scroll rerenders\r\n    <div role=\"presentation\" key={row[0]}>\r\n      {row.map((fileID) => (\r\n        <FileItem\r\n          key={fileID}\r\n          uppy={props.uppy}\r\n          {...fileProps}\r\n          role=\"listitem\"\r\n          openFileEditor={props.openFileEditor}\r\n          canEditFile={props.canEditFile}\r\n          toggleAddFilesPanel={props.toggleAddFilesPanel}\r\n          file={props.files[fileID]}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <VirtualList\r\n      class={dashboardFilesClass}\r\n      role=\"list\"\r\n      data={rows}\r\n      renderRow={renderRow}\r\n      rowHeight={rowHeight}\r\n    />\r\n  )\r\n}\r\n"]}