{"version":3,"names":["h","UIPlugin","getFileTypeExtension","supportsMediaRecorder","RecordingScreen","PermissionsScreen","locale","packageJson","_stream","_classPrivateFieldLooseKey","_audioActive","_recordingChunks","_recorder","_capturedMediaFile","_mediaDevices","_supportsUserMedia","_hasAudioCheck","_start","_startRecording","_stopRecording","_discardRecordedAudio","_submit","_stop","_getAudio","_changeSource","_updateSources","Audio","constructor","uppy","opts","_this","this","Object","defineProperty","value","_getAudio2","_hasAudioCheck2","writable","options","_classPrivateFieldLooseBase","Promise","reject","Error","then","hasAudio","setPluginState","getUserMedia","audio","stream","currentDeviceId","tracks","getAudioTracks","deviceId","getSettings","forEach","track","audioReady","catch","err","cameraError","info","message","MediaRecorder","stoppingBecauseOfMaxSize","addEventListener","event","push","data","restrictions","length","maxFileSize","totalSize","reduce","acc","chunk","size","averageChunkSize","expectedEndChunkSize","maxSize","Math","max","i18n","start","recordingLengthTimer","setInterval","currentRecordingLength","getPluginState","recordingLengthSeconds","isRecording","stopped","resolve","stop","clearInterval","file","recordedAudio","URL","createObjectURL","isRestriction","log","error","addFile","audioTracks","once","enumerateDevices","devices","audioSources","filter","device","kind","navigator","mediaDevices","id","type","icon","className","focusable","width","height","viewBox","d","fill","defaultLocale","i18nInit","title","render","audioState","_extends","audioActive","onChangeSource","onStartRecording","onStopRecording","onDiscardRecordedAudio","onSubmit","onStop","showAudioSourceDropdown","supportsRecording","recording","install","target","mount","ondevicechange","restartStream","audioSource","uninstall","unmount","some","mimeType","find","blob","_blob$type","fileExtension","name","Date","now","Blob","source","VERSION","version"],"sources":["Audio.jsx"],"sourcesContent":["import { h } from 'preact'\n\nimport { UIPlugin } from '@uppy/core'\n\nimport getFileTypeExtension from '@uppy/utils/lib/getFileTypeExtension'\nimport supportsMediaRecorder from './supportsMediaRecorder.js'\nimport RecordingScreen from './RecordingScreen.jsx'\nimport PermissionsScreen from './PermissionsScreen.jsx'\nimport locale from './locale.js'\n\nimport packageJson from '../package.json'\n\n/**\n * Audio recording plugin\n */\nexport default class Audio extends UIPlugin {\n  static VERSION = packageJson.version\n\n  #stream = null\n\n  #audioActive = false\n\n  #recordingChunks = null\n\n  #recorder = null\n\n  #capturedMediaFile = null\n\n  #mediaDevices = null\n\n  #supportsUserMedia = null\n\n  constructor (uppy, opts) {\n    super(uppy, opts)\n    this.#mediaDevices = navigator.mediaDevices\n    this.#supportsUserMedia = this.#mediaDevices != null\n    this.id = this.opts.id || 'Audio'\n    this.type = 'acquirer'\n    this.icon = () => (\n      <svg className=\"uppy-DashboardTab-iconAudio\" aria-hidden=\"true\" focusable=\"false\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\">\n        <path d=\"M21.143 12.297c.473 0 .857.383.857.857v2.572c0 3.016-2.24 5.513-5.143 5.931v2.64h2.572a.857.857 0 110 1.714H12.57a.857.857 0 110-1.714h2.572v-2.64C12.24 21.24 10 18.742 10 15.726v-2.572a.857.857 0 111.714 0v2.572A4.29 4.29 0 0016 20.01a4.29 4.29 0 004.286-4.285v-2.572c0-.474.384-.857.857-.857zM16 6.5a3 3 0 013 3v6a3 3 0 01-6 0v-6a3 3 0 013-3z\" fill=\"currentcolor\" fill-rule=\"nonzero\" />\n      </svg>\n    )\n\n    this.defaultLocale = locale\n\n    this.opts = { ...opts }\n\n    this.i18nInit()\n    this.title = this.i18n('pluginNameAudio')\n\n    this.setPluginState({\n      hasAudio: false,\n      audioReady: false,\n      cameraError: null,\n      recordingLengthSeconds: 0,\n      audioSources: [],\n      currentDeviceId: null,\n    })\n  }\n\n  #hasAudioCheck () {\n    if (!this.#mediaDevices) {\n      return Promise.resolve(false)\n    }\n\n    return this.#mediaDevices.enumerateDevices().then(devices => {\n      return devices.some(device => device.kind === 'audioinput')\n    })\n  }\n\n  // eslint-disable-next-line consistent-return\n  #start = (options = null) => {\n    if (!this.#supportsUserMedia) {\n      return Promise.reject(new Error('Microphone access not supported'))\n    }\n\n    this.#audioActive = true\n\n    this.#hasAudioCheck().then(hasAudio => {\n      this.setPluginState({\n        hasAudio,\n      })\n\n      // ask user for access to their camera\n      return this.#mediaDevices.getUserMedia({ audio: true })\n        .then((stream) => {\n          this.#stream = stream\n\n          let currentDeviceId = null\n          const tracks = stream.getAudioTracks()\n\n          if (!options || !options.deviceId) {\n            currentDeviceId = tracks[0].getSettings().deviceId\n          } else {\n            tracks.forEach((track) => {\n              if (track.getSettings().deviceId === options.deviceId) {\n                currentDeviceId = track.getSettings().deviceId\n              }\n            })\n          }\n\n          // Update the sources now, so we can access the names.\n          this.#updateSources()\n\n          this.setPluginState({\n            currentDeviceId,\n            audioReady: true,\n          })\n        })\n        .catch((err) => {\n          this.setPluginState({\n            audioReady: false,\n            cameraError: err,\n          })\n          this.uppy.info(err.message, 'error')\n        })\n    })\n  }\n\n  #startRecording = () => {\n    // only used if supportsMediaRecorder() returned true\n    // eslint-disable-next-line compat/compat\n    this.#recorder = new MediaRecorder(this.#stream)\n    this.#recordingChunks = []\n    let stoppingBecauseOfMaxSize = false\n    this.#recorder.addEventListener('dataavailable', (event) => {\n      this.#recordingChunks.push(event.data)\n\n      const { restrictions } = this.uppy.opts\n      if (this.#recordingChunks.length > 1\n          && restrictions.maxFileSize != null\n          && !stoppingBecauseOfMaxSize) {\n        const totalSize = this.#recordingChunks.reduce((acc, chunk) => acc + chunk.size, 0)\n        // Exclude the initial chunk from the average size calculation because it is likely to be a very small outlier\n        const averageChunkSize = (totalSize - this.#recordingChunks[0].size) / (this.#recordingChunks.length - 1)\n        const expectedEndChunkSize = averageChunkSize * 3\n        const maxSize = Math.max(0, restrictions.maxFileSize - expectedEndChunkSize)\n\n        if (totalSize > maxSize) {\n          stoppingBecauseOfMaxSize = true\n          this.uppy.info(this.i18n('recordingStoppedMaxSize'), 'warning', 4000)\n          this.#stopRecording()\n        }\n      }\n    })\n\n    // use a \"time slice\" of 500ms: ondataavailable will be called each 500ms\n    // smaller time slices mean we can more accurately check the max file size restriction\n    this.#recorder.start(500)\n\n    // Start the recordingLengthTimer if we are showing the recording length.\n    this.recordingLengthTimer = setInterval(() => {\n      const currentRecordingLength = this.getPluginState().recordingLengthSeconds\n      this.setPluginState({ recordingLengthSeconds: currentRecordingLength + 1 })\n    }, 1000)\n\n    this.setPluginState({\n      isRecording: true,\n    })\n  }\n\n  #stopRecording = () => {\n    const stopped = new Promise((resolve) => {\n      this.#recorder.addEventListener('stop', () => {\n        resolve()\n      })\n      this.#recorder.stop()\n\n      clearInterval(this.recordingLengthTimer)\n      this.setPluginState({ recordingLengthSeconds: 0 })\n    })\n\n    return stopped.then(() => {\n      this.setPluginState({\n        isRecording: false,\n      })\n      return this.#getAudio()\n    }).then((file) => {\n      try {\n        this.#capturedMediaFile = file\n        // create object url for capture result preview\n        this.setPluginState({\n          recordedAudio: URL.createObjectURL(file.data),\n        })\n      } catch (err) {\n        // Logging the error, exept restrictions, which is handled in Core\n        if (!err.isRestriction) {\n          this.uppy.log(err)\n        }\n      }\n    }).then(() => {\n      this.#recordingChunks = null\n      this.#recorder = null\n    }, (error) => {\n      this.#recordingChunks = null\n      this.#recorder = null\n      throw error\n    })\n  }\n\n  #discardRecordedAudio = () => {\n    this.setPluginState({ recordedAudio: null })\n    this.#capturedMediaFile = null\n  }\n\n  #submit = () => {\n    try {\n      if (this.#capturedMediaFile) {\n        this.uppy.addFile(this.#capturedMediaFile)\n      }\n    } catch (err) {\n      // Logging the error, exept restrictions, which is handled in Core\n      if (!err.isRestriction) {\n        this.uppy.log(err, 'warning')\n      }\n    }\n  }\n\n  #stop = async () => {\n    if (this.#stream) {\n      const audioTracks = this.#stream.getAudioTracks()\n      audioTracks.forEach((track) => track.stop())\n    }\n\n    if (this.#recorder) {\n      await new Promise((resolve) => {\n        this.#recorder.addEventListener('stop', resolve, { once: true })\n        this.#recorder.stop()\n\n        clearInterval(this.recordingLengthTimer)\n      })\n    }\n\n    this.#recordingChunks = null\n    this.#recorder = null\n    this.#audioActive = false\n    this.#stream = null\n\n    this.setPluginState({\n      recordedAudio: null,\n      isRecording: false,\n      recordingLengthSeconds: 0,\n    })\n  }\n\n  #getAudio () {\n    // Sometimes in iOS Safari, Blobs (especially the first Blob in the recordingChunks Array)\n    // have empty 'type' attributes (e.g. '') so we need to find a Blob that has a defined 'type'\n    // attribute in order to determine the correct MIME type.\n    const mimeType = this.#recordingChunks.find(blob => blob.type?.length > 0).type\n\n    const fileExtension = getFileTypeExtension(mimeType)\n\n    if (!fileExtension) {\n      return Promise.reject(new Error(`Could not retrieve recording: Unsupported media type \"${mimeType}\"`))\n    }\n\n    const name = `audio-${Date.now()}.${fileExtension}`\n    const blob = new Blob(this.#recordingChunks, { type: mimeType })\n    const file = {\n      source: this.id,\n      name,\n      data: new Blob([blob], { type: mimeType }),\n      type: mimeType,\n    }\n\n    return Promise.resolve(file)\n  }\n\n  #changeSource = (deviceId) => {\n    this.#stop()\n    this.#start({ deviceId })\n  }\n\n  #updateSources = () => {\n    this.#mediaDevices.enumerateDevices().then(devices => {\n      this.setPluginState({\n        audioSources: devices.filter((device) => device.kind === 'audioinput'),\n      })\n    })\n  }\n\n  render () {\n    if (!this.#audioActive) {\n      this.#start()\n    }\n\n    const audioState = this.getPluginState()\n\n    if (!audioState.audioReady || !audioState.hasAudio) {\n      return (\n        <PermissionsScreen\n          icon={this.icon}\n          i18n={this.i18n}\n          hasAudio={audioState.hasAudio}\n        />\n      )\n    }\n\n    return (\n      <RecordingScreen\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...audioState}\n        audioActive={this.#audioActive}\n        onChangeSource={this.#changeSource}\n        onStartRecording={this.#startRecording}\n        onStopRecording={this.#stopRecording}\n        onDiscardRecordedAudio={this.#discardRecordedAudio}\n        onSubmit={this.#submit}\n        onStop={this.#stop}\n        i18n={this.i18n}\n        showAudioSourceDropdown={this.opts.showAudioSourceDropdown}\n        supportsRecording={supportsMediaRecorder()}\n        recording={audioState.isRecording}\n        stream={this.#stream}\n      />\n    )\n  }\n\n  install () {\n    this.setPluginState({\n      audioReady: false,\n      recordingLengthSeconds: 0,\n    })\n\n    const { target } = this.opts\n    if (target) {\n      this.mount(target, this)\n    }\n\n    if (this.#mediaDevices) {\n      this.#updateSources()\n\n      this.#mediaDevices.ondevicechange = () => {\n        this.#updateSources()\n\n        if (this.#stream) {\n          let restartStream = true\n\n          const { audioSources, currentDeviceId } = this.getPluginState()\n\n          audioSources.forEach((audioSource) => {\n            if (currentDeviceId === audioSource.deviceId) {\n              restartStream = false\n            }\n          })\n\n          if (restartStream) {\n            this.#stop()\n            this.#start()\n          }\n        }\n      }\n    }\n  }\n\n  uninstall () {\n    if (this.#stream) {\n      this.#stop()\n    }\n\n    this.unmount()\n  }\n}\n"],"mappings":"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"}