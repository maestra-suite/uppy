{"version":3,"names":["fetchWithNetworkError","ASSEMBLIES_ENDPOINT","_headers","_classPrivateFieldLooseKey","_fetchWithNetworkError","_fetchJSON","_reportError","Client","constructor","opts","Object","defineProperty","value","_fetchJSON2","writable","err","params","errorReporting","type","assembly","assembly_id","instance","url","endpoint","submitError","catch","client","_classPrivateFieldLooseBase","rateLimitedQueue","wrapPromiseFunction","createAssembly","_ref","fields","signature","expectedFiles","data","FormData","append","JSON","stringify","keys","forEach","key","URL","service","href","method","headers","body","reserveFile","file","size","encodeURIComponent","assembly_ssl_url","addFile","uploadURL","Promise","reject","Error","uploadUrl","filename","name","fieldname","qs","updateNumberOfFilesInAssembly","num_expected_upload_files","pathname","assembly_updates","cancelAssembly","getAssemblyStatus","_temp","message","details","agent","navigator","userAgent","error","_len","arguments","length","args","Array","_key","then","response","status","rateLimit","ok","serverError","statusText","statusCode","endsWith","json","cause"],"sources":["Client.js"],"sourcesContent":["import fetchWithNetworkError from '@uppy/utils/lib/fetchWithNetworkError'\n\nconst ASSEMBLIES_ENDPOINT = '/assemblies'\n\n/**\n * A Barebones HTTP API client for Transloadit.\n */\nexport default class Client {\n  #headers = {}\n\n  #fetchWithNetworkError\n\n  constructor (opts = {}) {\n    this.opts = opts\n\n    if (this.opts.client != null) {\n      this.#headers['Transloadit-Client'] = this.opts.client\n    }\n\n    this.#fetchWithNetworkError = this.opts.rateLimitedQueue.wrapPromiseFunction(fetchWithNetworkError)\n  }\n\n  /**\n   * @param  {[RequestInfo | URL, RequestInit]} args\n   * @returns {Promise<any>}\n   */\n  #fetchJSON (...args) {\n    return this.#fetchWithNetworkError(...args).then(response => {\n      if (response.status === 429) {\n        this.opts.rateLimitedQueue.rateLimit(2_000)\n        return this.#fetchJSON(...args)\n      }\n\n      if (!response.ok) {\n        const serverError = new Error(response.statusText)\n        serverError.statusCode = response.status\n\n        if (!`${args[0]}`.endsWith(ASSEMBLIES_ENDPOINT)) return Promise.reject(serverError)\n\n        // Failed assembly requests should return a more detailed error in JSON.\n        return response.json().then(assembly => {\n          if (!assembly.error) throw serverError\n\n          const error = new Error(assembly.error)\n          error.details = assembly.message\n          error.assembly = assembly\n          if (assembly.assembly_id) {\n            error.details += ` Assembly ID: ${assembly.assembly_id}`\n          }\n          throw error\n        }, err => {\n          // eslint-disable-next-line no-param-reassign\n          err.cause = serverError\n          throw err\n        })\n      }\n\n      return response.json()\n    })\n  }\n\n  /**\n   * Create a new assembly.\n   *\n   * @param {object} options\n   * @param {string|object} options.params\n   * @param {object} options.fields\n   * @param {string} options.signature\n   * @param {number} options.expectedFiles\n   */\n  createAssembly ({\n    params,\n    fields,\n    signature,\n    expectedFiles,\n  }) {\n    const data = new FormData()\n    data.append('params', typeof params === 'string'\n      ? params\n      : JSON.stringify(params))\n    if (signature) {\n      data.append('signature', signature)\n    }\n\n    Object.keys(fields).forEach((key) => {\n      data.append(key, fields[key])\n    })\n    data.append('num_expected_upload_files', expectedFiles)\n\n    const url = new URL(ASSEMBLIES_ENDPOINT, `${this.opts.service}`).href\n    return this.#fetchJSON(url, {\n      method: 'POST',\n      headers: this.#headers,\n      body: data,\n    })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Reserve resources for a file in an Assembly. Then addFile can be used later.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  reserveFile (assembly, file) {\n    const size = encodeURIComponent(file.size)\n    const url = `${assembly.assembly_ssl_url}/reserve_file?size=${size}`\n    return this.#fetchJSON(url, { method: 'POST', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { assembly, file, url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Import a remote file to an Assembly.\n   *\n   * @param {object} assembly\n   * @param {UppyFile} file\n   */\n  addFile (assembly, file) {\n    if (!file.uploadURL) {\n      return Promise.reject(new Error('File does not have an `uploadURL`.'))\n    }\n    const size = encodeURIComponent(file.size)\n    const uploadUrl = encodeURIComponent(file.uploadURL)\n    const filename = encodeURIComponent(file.name)\n    const fieldname = 'file'\n\n    const qs = `size=${size}&filename=${filename}&fieldname=${fieldname}&s3Url=${uploadUrl}`\n    const url = `${assembly.assembly_ssl_url}/add_file?${qs}`\n    return this.#fetchJSON(url, { method: 'POST', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { assembly, file, url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Update the number of expected files in an already created assembly.\n   *\n   * @param {object} assembly\n   * @param {number} num_expected_upload_files\n   */\n  updateNumberOfFilesInAssembly (assembly, num_expected_upload_files) {\n    const url = new URL(assembly.assembly_ssl_url)\n    url.pathname = '/update_assemblies'\n    const body = JSON.stringify({\n      assembly_updates: [{\n        assembly_id: assembly.assembly_id,\n        num_expected_upload_files,\n      }],\n    })\n    return this.#fetchJSON(url, { method: 'POST', headers: this.#headers, body })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Cancel a running Assembly.\n   *\n   * @param {object} assembly\n   */\n  cancelAssembly (assembly) {\n    const url = assembly.assembly_ssl_url\n    return this.#fetchJSON(url, { method: 'DELETE', headers: this.#headers })\n      .catch((err) => this.#reportError(err, { url, type: 'API_ERROR' }))\n  }\n\n  /**\n   * Get the current status for an assembly.\n   *\n   * @param {string} url The status endpoint of the assembly.\n   */\n  getAssemblyStatus (url) {\n    return this.#fetchJSON(url, { headers: this.#headers })\n      .catch((err) => this.#reportError(err, { url, type: 'STATUS_ERROR' }))\n  }\n\n  submitError (err, { endpoint, instance, assembly } = {}) {\n    const message = err.details\n      ? `${err.message} (${err.details})`\n      : err.message\n\n    return this.#fetchJSON('https://transloaditstatus.com/client_error', {\n      method: 'POST',\n      body: JSON.stringify({\n        endpoint,\n        instance,\n        assembly_id: assembly,\n        agent: typeof navigator !== 'undefined' ? navigator.userAgent : '',\n        client: this.opts.client,\n        error: message,\n      }),\n    })\n  }\n\n  #reportError = (err, params) => {\n    if (this.opts.errorReporting === false) {\n      throw err\n    }\n\n    const opts = {\n      type: params.type,\n    }\n    if (params.assembly) {\n      opts.assembly = params.assembly.assembly_id\n      opts.instance = params.assembly.instance\n    }\n    if (params.url) {\n      opts.endpoint = params.url\n    }\n\n    this.submitError(err, opts).catch(() => {\n      // not much we can do then is there\n    })\n\n    throw err\n  }\n}\n"],"mappings":"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"}