{"version":3,"names":["ErrorWithCause","validateParams","params","Error","JSON","parse","err","cause","auth","key","dedupe","list","dedupeMap","Object","create","fileIDs","options","filter","Boolean","id","stringify","fileIDArrays","push","values","map","_ref","flat","getAssemblyOptions","file","assemblyOptions","fields","Array","isArray","fromEntries","fieldName","meta","AssemblyOptions","constructor","files","opts","build","length","Promise","all","undefined","then","alwaysRunAssembly"],"sources":["AssemblyOptions.js"],"sourcesContent":["import ErrorWithCause from '@uppy/utils/lib/ErrorWithCause'\n\n/**\n * Check that Assembly parameters are present and include all required fields.\n */\nfunction validateParams (params) {\n  if (params == null) {\n    throw new Error('Transloadit: The `params` option is required.')\n  }\n\n  if (typeof params === 'string') {\n    try {\n      // eslint-disable-next-line no-param-reassign\n      params = JSON.parse(params)\n    } catch (err) {\n      // Tell the user that this is not an Uppy bug!\n      throw new ErrorWithCause('Transloadit: The `params` option is a malformed JSON string.', { cause: err })\n    }\n  }\n\n  if (!params.auth || !params.auth.key) {\n    throw new Error('Transloadit: The `params.auth.key` option is required. '\n      + 'You can find your Transloadit API key at https://transloadit.com/c/template-credentials')\n  }\n}\n\n/**\n * Combine Assemblies with the same options into a single Assembly for all the\n * relevant files.\n */\nfunction dedupe (list) {\n  const dedupeMap = Object.create(null)\n  for (const { fileIDs, options } of list.filter(Boolean)) {\n    const id = JSON.stringify(options)\n    if (id in dedupeMap) {\n      dedupeMap[id].fileIDArrays.push(fileIDs)\n    } else {\n      dedupeMap[id] = {\n        options,\n        fileIDArrays: [fileIDs],\n      }\n    }\n  }\n\n  return Object.values(dedupeMap).map(({ options, fileIDArrays }) => ({\n    options,\n    fileIDs: fileIDArrays.flat(1),\n  }))\n}\n\nasync function getAssemblyOptions (file, options) {\n  const assemblyOptions = typeof options.assemblyOptions === 'function'\n    ? await options.assemblyOptions(file, options)\n    : options.assemblyOptions\n\n  validateParams(assemblyOptions.params)\n\n  const { fields } = assemblyOptions\n  if (Array.isArray(fields)) {\n    assemblyOptions.fields = file == null ? {} : Object.fromEntries(\n      fields.map((fieldName) => [fieldName, file.meta[fieldName]]),\n    )\n  } else if (fields == null) {\n    assemblyOptions.fields = {}\n  }\n\n  return assemblyOptions\n}\n\n/**\n * Turn Transloadit plugin options and a list of files into a list of Assembly\n * options.\n */\nclass AssemblyOptions {\n  constructor (files, opts) {\n    this.files = files\n    this.opts = opts\n  }\n\n  /**\n   * Generate a set of Assemblies that will handle the upload.\n   * Returns a Promise for an object with keys:\n   *  - fileIDs - an array of file IDs to add to this Assembly\n   *  - options - Assembly options\n   */\n  async build () {\n    const options = this.opts\n\n    if (this.files.length > 0) {\n      return Promise.all(\n        this.files.map(async (file) => {\n          if (file == null) return undefined\n\n          const assemblyOptions = await getAssemblyOptions(file, options)\n\n          // We check if the file is present here again, because it could had been\n          // removed during the await, e.g. if the user hit cancel while we were\n          // waiting for the options.\n          if (file == null) return undefined\n\n          return {\n            fileIDs: [file.id],\n            options: assemblyOptions,\n          }\n        }),\n      ).then(dedupe)\n    }\n\n    if (options.alwaysRunAssembly) {\n      // No files, just generate one Assembly\n      const assemblyOptions = await getAssemblyOptions(null, options)\n\n      return [\n        {\n          fileIDs: [],\n          options: assemblyOptions,\n        },\n      ]\n    }\n\n    // If there are no files and we do not `alwaysRunAssembly`,\n    // don't do anything.\n    return []\n  }\n}\n\nexport default AssemblyOptions\nexport { validateParams }\n"],"mappings":"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"}